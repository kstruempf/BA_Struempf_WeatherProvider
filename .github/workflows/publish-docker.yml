name: Build and Release Docker Container

on:
  push:
    branches: [ master, pre-release ]
  pull_request:
    branches: [ master ]
env:
  GH_REGISTRY: ghcr.io
  REPOSITORY_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Build Image
        uses: docker/build-push-action@v2
        with:
          context: ./WeatherProvider
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release:
    runs-on: ubuntu-latest
    name: Release
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/pre-release' }}
    needs: [ build ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Bump version
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: master

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.GH_REGISTRY }}/${{ env.REPOSITORY_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.tag_version.outputs.new_tag }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GH_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push version ${{ steps.tag_version.outputs.new_tag }}
        uses: docker/build-push-action@v2
        with:
          context: ./WeatherProvider
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create a GitHub release ${{ steps.tag_version.outputs.new_tag }}
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          prerelease: contains( ${{ steps.tag_version.outputs.release_type }} , 'pre' )
